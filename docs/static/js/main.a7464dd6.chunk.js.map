{"version":3,"sources":["components/AddCategory.js","actions/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categs","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAwCeA,EArCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAkBA,OACI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAM,OAAOP,GAAP,mBAAsBO,OAC1CN,EAAc,MAOlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SArBkB,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAOF,GAFP,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QATrB,kBAaZM,GAbY,4CAAH,sDCYLO,EAVK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAE7B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QC0BDO,EA7BC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAGd,ECJwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WAENxB,EAASC,GAAWwB,MAAM,SAAAC,GAClBH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAIrB,CAAEpB,IAEEqB,EDdkBK,CAAa1B,GAA/BO,EAAP,EAAOA,KAAMa,EAAb,EAAaA,QAGb,OACI,mCAEKA,EAaK,mBAAGJ,UAAU,uCAAb,qBAZF,qCACI,oBAAIA,UAAU,oCAAd,SAAmDhB,IACnD,qBAAKgB,UAAU,WAAf,SAGYT,EAAKE,KAAI,SAAAkB,GAAK,OACV,cAAC,EAAD,eACgBA,GADEA,EAAMhB,eEqB7CiB,EArCM,WAIjB,MAAoC1C,mBAAS,IAA7C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAQA,OACI,qCACI,sBAAK+B,UAAU,cAAf,UACI,qBAAKA,UAAU,WACf,sBAAKA,UAAU,yBAAf,UACI,8CACA,yDACA,cAAC,EAAD,CAAa/B,cAAeA,UAGpC,qBAAK+B,UAAU,YAAf,SACI,6BAEQa,EAAWpB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CACQA,SAAUA,GADJA,c,MCxB1C8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a7464dd6.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2){\r\n            setCategories(categs => [  inputValue, ...categs]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n          />\r\n        </form>\r\n    )\r\n\r\n    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGifs = async( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=u3XS6TB93Hj9JrDd8EHTVBXYZ0SuOiyE`;\r\n    const resp = await fetch( url ) ;\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(gif =>{ \r\n        return{\r\n            id:gif.id,\r\n            title:gif.title,\r\n            url:gif.images.downsized_medium.url\r\n        }\r\n    })\r\n    // console.log(gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\n    const {data, loading}  = useFetchGifs(category);\r\n \r\n\r\n    return (\r\n        <>\r\n        {\r\n            !loading ? (\r\n                <> \r\n                    <h3 className=\"animate__animated animate__zoomIn\">{category}</h3>\r\n                    <div className=\"gif-grid\">\r\n\r\n                            {\r\n                                data.map(image => (\r\n                                    <GifGridItem key={image.id} \r\n                                                {...image} />\r\n                                ))\r\n                            }\r\n                    </div>\r\n                </>\r\n            ) : ( <p className=\" animate__animated animate__bounceIn\">Loading</p>)\r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getGifs } from '../actions/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category ).then( imgs => { \r\n                setState({\r\n                    data:imgs,\r\n                    loading:false\r\n                })    \r\n        })\r\n\r\n    }, [ category ])\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = [ 'One punch', 'Samurai X', 'KNY'];\r\n\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories(['SNK', ...categories]);\r\n    // }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className=\"main-banner\">\r\n                <div className=\"banner\"></div>\r\n                <div className=\"initial-info container\">\r\n                    <h2>GifExpertApp</h2>\r\n                    <p>Â¡Gifs dynamic search!</p>\r\n                    <AddCategory setCategories={setCategories}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <ul>\r\n                    {\r\n                        categories.map( category => (\r\n                            <GifGrid key={category} \r\n                                    category={category}        \r\n                            />\r\n                        )) \r\n                    }               \r\n                </ul>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}